# =====================================================================
# Shuffled Endpoint Dataset Builder Configuration
# =====================================================================
# Builds endpoint dataset using pre-shuffled trajectory indices
# Useful for incremental dataset construction with consistent ordering
#
# Usage:
#   python src/build_shuffled_endpoint_dataset.py
#   python src/build_shuffled_endpoint_dataset.py system=cartpole
#   python src/build_shuffled_endpoint_dataset.py increment=200 start=0 end=100
#   python src/build_shuffled_endpoint_dataset.py type=test
# =====================================================================

defaults:
  - system: pendulum

# Trajectory data paths
data_dirs: /common/users/shared/pracsys/genMoPlan/data_trajectories/pendulum_lqr_50k/trajectories
shuffled_idxs_file: /common/users/shared/pracsys/genMoPlan/data_trajectories/pendulum_lqr_50k/shuffled_indices.txt
dest_dir: /common/users/dm1487/arcmg_datasets/pendulum_lqr/incremental_endpoint_dataset

# Processing range (slicing shuffled_indices.txt)
start: 0       # Start index
end: 100       # End index (exclusive)
increment: 100 # Number used in output filename (e.g., "100_endpoint_dataset.txt")

# Dataset type: "train", "val", or "test"
# - train/val: Creates endpoint pairs for ALL states in trajectory → final state
# - test: Creates only FIRST state → final state (one pair per trajectory)
type: train

# =====================================================================
# Fixed Attractor Mode (Optional)
# =====================================================================
# When enabled, classifies trajectories as success/failure and maps
# all states to one of two fixed attractor endpoints
#
# Fixed attractors are system-dependent:
#   Pendulum:  success=[0.0, 0.0]              failure=[2.1, 0.0]
#   CartPole:  success=[0.0, 0.0, 0.0, 0.0]    failure=[2.0, π, 8.6, 18.5]
# =====================================================================
use_fixed_attractors: false  # true = use fixed attractors, false = use actual final states
attractor_radius: 0.1        # Radius for success/failure classification
balance_dataset: false       # true = balance success/failure counts (train/val only)